openapi: 3.0.0

info:
  version: unknown
  title: Auth-backend

servers:
  - url: /v1

paths:

  # ========================================
  # ===== Auth API
  # ========================================

  /auth/signup:

    post:
      operationId: signUp
      tags:
        - auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        201:
          description: Created
          # FIXME: add location header
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /auth/signin:

    post:
      operationId: signIn
      tags:
        - auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        default:
          $ref: '#/components/responses/UnexpectedError'

  /auth/refresh-token:

    post:
      operationId: refreshToken
      tags:
        - auth
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        default:
          $ref: '#/components/responses/UnexpectedError'

components:

  responses:

    UnexpectedError:
      description: Unexpected Error

  schemas:

    Token:
      type: object
      properties:
        issuedAt:
          type: integer
          format: int64
        accessToken:
          type: string
        accessExpiresIn:
          type: integer
          format: int64
        refreshToken:
          type: string
        refreshExpiresIn:
          type: integer
          format: int64

    SignInRequest:
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string
          writeOnly: true
        remember-me:
          type: boolean
          writeOnly: true
          default: true

    RefreshTokenRequest:
      type: object
      required:
        - accessToken
        - refreshToken
      properties:
        accessToken:
          type: string
          x-format: not-blank
        refreshToken:
          type: string
          x-format: not-blank

    User:
      required:
        - email
        - password
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        role:
          $ref: "#/components/schemas/UserRole"
        email:
          type: string
        password:
          type: string
          writeOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        deletedAt:
          type: string
          format: date-time
          readOnly: true

    UserRole:
      type: string
      readOnly: true
      enum:
        - "USER"
        - "ADMIN"

  securitySchemes:

    customerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

    adminAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
